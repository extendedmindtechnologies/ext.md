
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>md.ext</groupId>
    <artifactId>root</artifactId>
    <version>0-SNAPSHOT</version>
  </parent>
  <artifactId>site</artifactId>
  <packaging>jar</packaging>
  <name>ext.md :: Site</name>
  <description>ext.md site</description>
  <url>https://github.com/extendedmindtechnologies/ext.md</url>
  <inceptionYear>2016</inceptionYear>

  <organization>
    <name>Extended Mind Technologies Oy</name>
    <url>https://ext.md</url>
  </organization>

  <scm>
    <connection>scm:git:git@github.com:extendedmindtechnologies/ext.md.git</connection>
    <developerConnection>scm:git:git@github.com:extendedmindtechnologies/ext.md.git</developerConnection>
    <url>git@github.com:extendedmindtechnologies/ext.md.git</url>
  </scm>

  <developers>
    <developer>
      <id>ttiurani</id>
      <name>Timo Tiuraniemi</name>
      <email>timo.tiuraniemi@iki.fi</email>
    </developer>
  </developers>

  <properties>
    <nginxSiteHost>extmd-site</nginxSiteHost>
  </properties>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-extmd-app</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>md.ext</groupId>
                  <artifactId>app</artifactId>
                  <version>${project.version}</version>
                  <classifier>sources</classifier>
                  <type>zip</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/extmd-app</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-extendedmind-site</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.extendedmind.frontend</groupId>
                  <artifactId>frontend-site</artifactId>
                  <version>${project.version}</version>
                  <classifier>sources</classifier>
                  <type>zip</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/extendedmind-frontend-site</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-fiak-site-conf</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>fi.filosofianakatemia</groupId>
                  <artifactId>site</artifactId>
                  <version>${fiak.version}</version>
                  <classifier>config</classifier>
                  <type>zip</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/fiak-site-config</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <version>1.4</version>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <properties>
                <extraNginxConfFile>${project.basedir}/resources/extra.nginx.extendedmind.conf</extraNginxConfFile>
              </properties>
              <source>
                def file = new File(project.properties.extraNginxConfFile)
                project.properties.extraNginxConf = file.getText()
              </source>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-site-sources</id>
            <phase>process-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.basedir}</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>${project.build.directory}/extendedmind-frontend-site</directory>
                  <includes>
                    <include>src/**</include>
                  </includes>
                  <excludes>
                    <exclude>src/views/base.nunjucks</exclude>
                    <exclude>src/config-devel.json</exclude>
                  </excludes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-site-config</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.basedir}/src</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>${project.basedir}/resources</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>config-devel.json</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-app-fonts</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.basedir}/src/public/static/fonts/${project.version}</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>${project.build.directory}/extmd-app/static/${project.version}/fonts</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>generate-docker-files-from-templates</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/filtered-resources</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>${project.build.directory}/extendedmind-frontend-site/templates</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-docker-files</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/filtered-resources</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>${project.build.directory}/extendedmind-frontend-site/docker</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>site-pm2.json</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>generate-new-docker-files</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/filtered-resources</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>${project.basedir}/resources</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>site-config.json</include>
                    <include>nginx.dashboard.conf</include>
                    <include>*-assembly.xml</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>install node and npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <configuration>
              <nodeVersion>${node.version}</nodeVersion>
              <npmVersion>${npm.version}</npmVersion>
            </configuration>
          </execution>
          <execution>
            <id>npm-install</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>compile</phase>
            <configuration>
              <arguments>install</arguments>
            </configuration>
          </execution>
          <execution>
            <id>npm-prune-to-production</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <arguments>prune --production</arguments>
            </configuration>
          </execution>
          <execution>
            <id>npm-back-to-developement</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>pre-integration-test</phase>
            <configuration>
              <arguments>install</arguments>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <workingDirectory>src</workingDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <configuration>
          <sourceDirectory>target/filtered-resources</sourceDirectory>
          <images>
            <image>
              <name>quay.io/extmd/app</name>
              <alias>extmd-app</alias>
              <build>
                <from>quay.io/extendedmind/data-volume:dv-3.7</from>
                <maintainer>timo.tiuraniemi@iki.fi</maintainer>
                <tags>
                  <tag>latest</tag>
                  <tag>${project.version}</tag>
                </tags>
                <assembly>
                  <mode>dir</mode>
                  <basedir>/app/app</basedir>
                  <descriptor>app-assembly.xml</descriptor>
                </assembly>
                <entryPoint>
                  <exec>
                    <arg>/bin/cp</arg>
                    <arg>-R</arg>
                    <arg>/app/app/.</arg>
                    <arg>/app/site-public/assets</arg>
                  </exec>
                </entryPoint>
              </build>
            </image>
            <image>
              <name>quay.io/extmd/site-static</name>
              <alias>extmd-site-static</alias>
              <build>
                <from>quay.io/extendedmind/data-volume:dv-3.7</from>
                <maintainer>timo.tiuraniemi@iki.fi</maintainer>
                <tags>
                  <tag>latest</tag>
                  <tag>${project.version}</tag>
                </tags>
                <assembly>
                  <mode>dir</mode>
                  <basedir>/app/site-static</basedir>
                  <descriptor>site-static-assembly.xml</descriptor>
                </assembly>
                <entryPoint>
                  <exec>
                    <arg>/bin/cp</arg>
                    <arg>-R</arg>
                    <arg>/app/site-static/.</arg>
                    <arg>/app/site-public/assets</arg>
                  </exec>
                </entryPoint>
              </build>
            </image>
            <image>
              <name>quay.io/extmd/site</name>
              <alias>extmd-site</alias>
              <build>
                <from>quay.io/extendedmind/node:node-10.4.0-3</from>
                <maintainer>timo.tiuraniemi@iki.fi</maintainer>
                <tags>
                  <tag>latest</tag>
                  <tag>${project.version}</tag>
                </tags>
                <ports>
                  <port>3000</port>
                </ports>
                <volumes>
                  <volume>/app/site-generated</volume>
                  <volume>/etc/nginx/sites-enabled/extmd-site</volume>
                </volumes>
                <assembly>
                  <mode>dir</mode>
                  <basedir>/</basedir>
                  <descriptor>site-assembly.xml</descriptor>
                </assembly>
                <workdir>/app/site</workdir>
                <entryPoint>
                  <exec>
                    <arg>pm2-docker</arg>
                    <arg>site-pm2.json</arg>
                  </exec>
                </entryPoint>
              </build>
            </image>
            <image>
              <name>quay.io/extmd/etc-init</name>
              <alias>etc-init</alias>
              <build>
                <from>quay.io/extendedmind/tar-curl-rsync:tcr-5</from>
                <maintainer>timo.tiuraniemi@iki.fi</maintainer>
                <tags>
                  <tag>latest</tag>
                  <tag>${project.version}</tag>
                </tags>
                <assembly>
                  <mode>dir</mode>
                  <basedir>/</basedir>
                  <descriptor>etc-init-assembly.xml</descriptor>
                </assembly>
                <workdir>/app/etc-init</workdir>
                <entryPoint>
                  <exec>
                    <arg>/app/etc-init/etc-init.sh</arg>
                  </exec>
                </entryPoint>
              </build>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
             <id>build</id>
             <phase>package</phase>
             <goals>
               <goal>build</goal>
             </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>${basedir}/src/etc</directory>
            </fileset>
            <fileset>
              <directory>${basedir}/src/node</directory>
            </fileset>
            <fileset>
              <directory>${basedir}/src/node_modules</directory>
            </fileset>
            <fileset>
              <directory>${basedir}/src/typings</directory>
            </fileset>
            <fileset>
              <directory>${basedir}/src/public</directory>
            </fileset>
            <fileset>
              <directory>${basedir}/src/dist</directory>
            </fileset>
            <!-- Include added extendedmind-site files -->
            <fileset>
              <directory>${basedir}/src/lib</directory>
              <excludes>
                <exclude>extmd/**</exclude>
                <exclude>.gitignore</exclude>
              </excludes>
            </fileset>
            <fileset>
              <directory>${basedir}/src/scss</directory>
              <excludes>
                <exclude>extmd/**</exclude>
                <exclude>.gitignore</exclude>
              </excludes>
            </fileset>
            <fileset>
              <directory>${basedir}/src/views</directory>
              <excludes>
                <exclude>extmd/**</exclude>
                <exclude>base.nunjucks</exclude>
                <exclude>.gitignore</exclude>
              </excludes>
            </fileset>
            <fileset>
              <directory>${basedir}/src</directory>
              <includes>
                <include>*.json</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
