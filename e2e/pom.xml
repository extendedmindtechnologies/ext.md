
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>md.ext</groupId>
    <artifactId>root</artifactId>
    <version>0-SNAPSHOT</version>
  </parent>
  <artifactId>e2e</artifactId>
  <packaging>pom</packaging>
  <name>ext.md :: E2E tests</name>
  <description>ext.md E2E tests</description>
  <url>https://github.com/extendedmindtechnologies/ext.md</url>
  <inceptionYear>2016</inceptionYear>

  <organization>
    <name>Extended Mind Technologies Oy</name>
    <url>https://ext.md</url>
  </organization>

  <scm>
    <connection>scm:git:git@github.com:extendedmindtechnologies/ext.md.git</connection>
    <developerConnection>scm:git:git@github.com:extendedmindtechnologies/ext.md.git</developerConnection>
    <url>git@github.com:extendedmindtechnologies/ext.md.git</url>
  </scm>

  <developers>
    <developer>
      <id>ttiurani</id>
      <name>Timo Tiuraniemi</name>
      <email>timo.tiuraniemi@iki.fi</email>
    </developer>
  </developers>

  <properties>
    <root.project.basedir>${project.parent.basedir}</root.project.basedir>
    <e2e.urlOrigin>http://localhost:8008</e2e.urlOrigin>
    <e2e.mailgunDomain>extendedmind.org</e2e.mailgunDomain>
    <e2e.mailgunKey>TEST KEY</e2e.mailgunKey>
    <e2e.emailFrom>extended mind &lt;info@extendedmind.org&gt;</e2e.emailFrom>
    <e2e.emailProvider>DUMMY</e2e.emailProvider>
  </properties>

  <dependencies>

    <dependency>
      <groupId>org.extendedmind</groupId>
      <artifactId>backend</artifactId>
      <type>test-jar</type>
      <scope>compile</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.extendedmind</groupId>
                  <artifactId>backend</artifactId>
                  <type>test-jar</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                  <includes>*.zip, testData.properties</includes>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <!-- <execution> -->
          <!--   <id>unpack-test-database</id> -->
          <!--   <phase>generate-resources</phase> -->
          <!--   <goals> -->
          <!--     <goal>unpack</goal> -->
          <!--   </goals> -->
          <!--   <configuration> -->
          <!--     <artifactItems> -->
          <!--       <artifactItem> -->
          <!--         <groupId>org.piwik</groupId> -->
          <!--         <artifactId>test-mariadb-10.1.13</artifactId> -->
          <!--         <version>2.16.1</version> -->
          <!--         <type>zip</type> -->
          <!--         <overWrite>true</overWrite> -->
          <!--         <outputDirectory>${project.build.directory}/docker-dirs/mariadb-data</outputDirectory> -->
          <!--         <includes>mysql/**</includes> -->
          <!--       </artifactItem> -->
          <!--     </artifactItems> -->
          <!--   </configuration> -->
          <!-- </execution> -->
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <!-- This is needed sot that Docker doesn't make the dirs root:root -->
            <id>create-target-dirs</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target name="create-docker-dirs">
                <mkdir dir="target/docker-dirs/backend-emails" />
                <mkdir dir="target/docker-dirs/backend-backup" />
                <mkdir dir="target/docker-dirs/site-dynamic/generated" />
                <mkdir dir="target/docker-dirs/site-dynamic/files" />
                <mkdir dir="target/docker-dirs/site-data" />
                <mkdir dir="target/docker-dirs/mariadb-data" />
              </target>
            </configuration>
          </execution>
          <execution>
            <id>unzip-database</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target name="unzip-database">
                <unzip src="target/neo4j-test.zip" dest="target/docker-dirs/backend-data" />
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <configuration>
          <verbose>true</verbose>
          <images>
            <image>
              <name>quay.io/extendedmind/mariadb:mariadb-10.1.21</name>
              <alias>mariadb</alias>
              <run>
                <namingStrategy>alias</namingStrategy>
                <env>
                  <MYSQL_ROOT_PASSWORD>rootpwd</MYSQL_ROOT_PASSWORD>
                </env>
                <volumes>
                  <bind>
                    <volume>${project.build.directory}/docker-dirs/mariadb-data:/app/mariadb-data</volume>
                  </bind>
                </volumes>
                <ports>
                  <port>3306:3306</port>
                </ports>
              </run>
            </image>
            <image>
              <name>quay.io/extendedmind/piwik:piwik-3.0.2</name>
              <alias>piwik</alias>
              <run>
                <namingStrategy>alias</namingStrategy>
                <!--volumes>
                  <from>
                    <image>extmd-site</image>
                  </from>
                </volumes-->
                <links>
                  <link>mariadb:mariadb</link>
                </links>
                <env>
                  <EXTENDEDMIND_DB_PIWIKPASSWORD>piwikpwd</EXTENDEDMIND_DB_PIWIKPASSWORD>
                  <!-- Salt randomly generated when the test localhost:8008 piwik database was created -->
                  <EXTENDEDMIND_DB_PIWIKSALT>1617253e9c4e9719d9cedc7dbfade0a8</EXTENDEDMIND_DB_PIWIKSALT>
                  <EXTENDEDMIND_DB_PIWIKSECURE>0</EXTENDEDMIND_DB_PIWIKSECURE>
                </env>
              </run>
            </image>
            <image>
              <name>quay.io/extendedmind/backend</name>
              <alias>backend</alias>
              <run>
                <namingStrategy>alias</namingStrategy>
                <env>
                  <JAVA_TOOL_OPTIONS>-Xmx512m</JAVA_TOOL_OPTIONS>
                </env>
                <volumes>
                  <bind>
                    <volume>${project.build.directory}/docker-dirs/backend-emails:/app/backend-emails</volume>
                    <volume>${project.build.directory}/docker-dirs/backend-data:/app/backend-data</volume>
                  </bind>
                </volumes>
                <ports>
                  <port>8007:8081</port>
                </ports>
                <cmd>
                  <arg>-Dextendedmind.security.tokenSecret=01234567890123456789012345678901</arg>
                  <arg>-Dextendedmind.security.signupMode=BETA</arg>
                  <arg>-Dextendedmind.email.urlOrigin=${e2e.urlOrigin}</arg>
                  <arg>-Dextendedmind.email.provider=${e2e.emailProvider}</arg>
                  <arg>-Dextendedmind.email.mailgun.domain=${e2e.mailgunDomain}</arg>
                  <arg>-Dextendedmind.email.mailgun.apiKey=${e2e.mailgunKey}</arg>
                  <arg>-Dextendedmind.email.from=${e2e.emailFrom}</arg>
                  <arg>-Dextendedmind.email.dummy=/app/backend-emails</arg>
                  <arg>-Dextendedmind.ui={}</arg>
                  <arg>-cp</arg>
                  <arg>/app/backend/lib/*</arg>
                  <arg>org.extendedmind.Server</arg>
                </cmd>
              </run>
            </image>
            <image>
              <name>quay.io/extmd/site-static</name>
              <alias>extmd-site-static</alias>
              <run>
                <namingStrategy>alias</namingStrategy>
                <volumes>
                  <bind>
                    <volume>${project.build.directory}/docker-dirs/site-data:/app/site-data</volume>
                  </bind>
                </volumes>
              </run>
            </image>
            <image>
              <name>quay.io/extmd/site</name>
              <alias>extmd-site</alias>
              <run>
                <namingStrategy>alias</namingStrategy>
                <volumes>
                  <bind>
                    <volume>${project.build.directory}/docker-dirs/site-dynamic:/app/site-dynamic</volume>
                    <volume>${project.build.directory}/docker-dirs/site-data:/app/site/public:ro</volume>
                  </bind>
                </volumes>
                <links>
                  <link>backend:backend</link>
                </links>
                <env>
                  <EXTENDEDMIND_URL_ORIGIN>http://localhost:8008</EXTENDEDMIND_URL_ORIGIN>
                </env>
              </run>
            </image>
            <image>
              <name>quay.io/extendedmind/nginx:nginx-1.11.9-1</name>
              <alias>nginx</alias>
              <run>
                <namingStrategy>alias</namingStrategy>
                <volumes>
                  <from>
                    <image>extmd-site</image>
                    <image>piwik</image>
                  </from>
                  <bind>
                    <volume>${project.build.directory}/docker-dirs/site-data:/app/site-data:ro</volume>
                    <volume>${project.build.directory}/docker-dirs/site-dynamic:/app/site-dynamic:ro</volume>
                  </bind>
                </volumes>
                <links>
                  <link>piwik:piwik</link>
                  <link>backend:backend</link>
                  <link>extmd-site:extmd-site</link>
                </links>
                <ports>
                  <port>8008:8008</port>
                </ports>
              </run>
            </image>
            <!--image>
              <name>quay.io/extmd/backend-backup</name>
              <alias>extmd-backend-backup</alias>
              <run>
                <namingStrategy>alias</namingStrategy>
                <links>
                  <link>backend:backend</link>
                </links>
                <volumes>
                  <bind>
                    <volume>${project.build.directory}/docker-dirs/backend-backup:/app/backend-backup/archives</volume>
                  </bind>
                </volumes>
                <cmd>
                  <arg>/app/backend-backup/archives</arg>
                </cmd>
              </run>
            </image>
            <image>
              <name>quay.io/extmd/sync-folder</name>
              <alias>extmd-sync-folder</alias>
              <run>
                <namingStrategy>alias</namingStrategy>
                <volumes>
                  <bind>
                    <volume>${project.build.directory}/docker-dirs/site-data:/app/site-data:ro</volume>
                    <volume>${project.build.directory}/docker-dirs/site-dynamic:/app/site-dynamic</volume>
                  </bind>
                </volumes-->
                <!-- To test, rsync all static files to /files/test -->
                <!--cmd>/app/site-data/static /app/site-dynamic/files/test</cmd>
              </run>
            </image-->
          </images>
        </configuration>
        <executions>
          <execution>
             <id>start-docker</id>
             <phase>pre-integration-test</phase>
             <goals>
               <goal>start</goal>
             </goals>
          </execution>
          <execution>
             <id>stop-docker</id>
             <phase>post-integration-test</phase>
             <goals>
               <goal>stop</goal>
             </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
